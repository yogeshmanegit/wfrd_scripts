--script to check missing/mismatch of segments
select * from 
(select distinct MDMSegmentDescription from vw_HRMSStagingUsers) h
left join OrgDataLevel2 l2 on h.MDMSegmentDescription = l2.Level2Name and l2.Active = 1
where l2.Level2Name is null
GO
ALTER VIEW dbo.vw_HRMSStagingUsers
AS

	SELECT DISTINCT 
			[Type], 
			POSN_DESCR [Title],
			OPRID [WFTUserName],

			CASE WHEN [TYPE] = 'POI' AND (POSN_DESCR IS NULL OR POSN_DESCR IN ('R&D Engineering', 'Corporate Functions')) THEN 25
				WHEN [TYPE]='POI' AND POSN_DESCR in('Geozone Operations','Global Product Lines') THEN 23
				WHEN [TYPE]='POI' AND POSN_DESCR ='Manufacturing' THEN 24
				WHEN POSN_DESCR in('Geozone Operations','Global Product Lines') THEN 18
				WHEN  POSN_DESCR ='Manufacturing' THEN 19 
				ELSE 20 
			END as CategoryID,

			CASE 
				WHEN location='SGPSGLYG01' Then 'SGPSGLYG02'
				WHEN location='GBRSXEGR01' Then 'GBRSXEGR02'
				WHEN location='MYSWPKUL01' Then 'MYSWPKUL03'
				WHEN location='GBRGRABD05' Then 'GBRGRABD15'
				WHEN location='VENZUOJE01' Then 'VENZUOJE02'
				WHEN location='USALABRS06' Then 'USALABRS14'
				WHEN location='USALABRS13' Then 'USALABRS14'
				WHEN location='RUSYANOY01' Then 'RUSYANOY02'
				WHEN location='TKM00BLK01' Then 'TKM00MRY01'
				WHEN location='TKM00BLK02' Then 'TKM00MRY01'
				WHEN location='USALANIB01' Then 'USALANIB02'
			ELSE location 
			END as [Location],
	 
			W_SEG_DESCR [HRMSSegmentDescription],

			CASE WHEN W_SEG_DESCR = 'SHARED SERVICES DEI' THEN 'DEI Shared Services'
				WHEN W_SEG_DESCR='EXECUTIVE' THEN 'EXECUTIVE'
				WHEN W_SEG_DESCR='INTEGRATED DRILLING-PROJ MGT' THEN 'Integrated Drilling -Proj Mgt'
				WHEN W_SEG_DESCR ='SHARED SERVICES COMP & PROD'  THEN 'CMPD Shared Services'
				WHEN W_SEG_DESCR='PRODUCTION AUTOMATION & SW' THEN 'Production Automation & Software'
				ELSE W_SEG_DESCR 
			END as [MDMSegmentDescription]
			FROM HrmsStagingUsers
			--FROM AuditHrmsStagingUsers
			--where AuditDate >= '2021-02-01'

GO

--select * from AuditHrmsStagingUsers

--Script
--UPDATE OrgDataLevel2 SET Active = 1 where Level2Id= 7
--DELETE FROM ExternalData WHERE hcYear = 2021 and hcMonth = 2 and Level1ID is null and level2Id is null and IsAutoGenerated = 1

--select * from OrgDataLevel2 where Level2Name like '%DRILLING%'

BEGIN TRAN

select YEAR(getdate()) [HcYear],
		MONTH(getdate()) [HcMonth], 
		temptable.Level1ID, 
		temptable.Level2ID, 
		temptable.LocationID, 
		temptable.CategoryID,
		COUNT(*) [HeadCount]
		into #temp_headcount
from (
	select  stagingUsers.WFTUserName
						,stagingUsers.location
						,stagingUsers.HRMSSegmentDescription
						,stagingUsers.MDMSegmentDescription
						,OrgDataLevel2.Level2ID
						,OrgDataLevel2.Level1ID
						, c.LocationId [LocationID]
						, c.PropertyId [PropertyID]
					    ,stagingUsers.CategoryID
		from  dbo.vw_HRMSStagingUsers stagingUsers
		LEFT JOIN (SELECT LOCN_ID, MIN(LocationId) [LocationId], MAX(PropertyId) [PropertyId]
						FROM dbo.vw_PhysicalLocation c 
						JOIN dbo.vw_HdrWFTLocations d on d.propertyid = c.LEASE_NUM
					GROUP BY LOCN_ID) c on c.LOCN_ID = stagingUsers.location
		join OrgDataLevel2 on stagingUsers.MDMSegmentDescription = OrgDataLevel2.level2Name 
						and ISNULL(stagingUsers.MDMSegmentDescription,'') != '' and OrgDataLevel2.Active = 1 
	    WHERE PropertyID IS NOT NULL

) temptable
group by temptable.Level2ID, 
temptable.Level1ID,
temptable.LocationID,
temptable.CategoryID


INSERT INTO ExternalData (hcYear, hcMonth, Level1ID, Level2ID, LocationID, EDCategoryID, HeadCount, IsAutogenerated)
select t.hcYear, t.hcMonth, t.Level1ID, t.Level2ID, t.LocationID, t.CategoryID, t.HeadCount, 1 [IsAutogenerated]
from #temp_headcount t
left join ExternalData d on t.HcYear = d.hcYear and t.HcMonth = d.hcMonth and t.LocationID = d.LocationID
								 and t.Level1ID = d.Level1ID and t.Level2ID = d.Level2ID and t.CategoryID = d.EDCategoryID
where d.HeadCount is null

select t.hcYear, t.hcMonth, t.Level1ID, t.Level2ID, t.LocationID, t.CategoryID, t.HeadCount, 1 [IsAutogenerated]
from #temp_headcount t
left join ExternalData d on t.HcYear = d.hcYear and t.HcMonth = d.hcMonth and t.LocationID = d.LocationID
								 and t.Level1ID = d.Level1ID and t.Level2ID = d.Level2ID and t.CategoryID = d.EDCategoryID
where d.HeadCount is null

drop table #temp_headcount

rollback tran